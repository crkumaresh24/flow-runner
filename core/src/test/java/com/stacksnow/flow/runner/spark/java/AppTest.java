/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.stacksnow.flow.runner.spark.java;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.stacksnow.flow.runner.spark.java.model.DAG;
import com.stacksnow.flow.runner.spark.java.model.RunnerEntry;
import org.apache.commons.io.IOUtils;
import org.jgrapht.experimental.dag.DirectedAcyclicGraph;
import org.junit.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.lang.reflect.Type;
import java.nio.charset.StandardCharsets;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class AppTest {

    @Test
    public void testStartDAG() throws Exception {
        App classUnderTest = new App();
        DAG dag = getSampleFlowJSON();
        Map<String, RunnerEntry> runnerEntries = getRunnersList();
        DirectedAcyclicGraph directedAcyclicGraph = classUnderTest.startDAG(dag, runnerEntries);
        assertNotNull("graph should not be null", directedAcyclicGraph);
        assertEquals(2, directedAcyclicGraph.vertexSet().size());
    }

    static Map<String, RunnerEntry> getRunnersList() throws IOException {
        Gson gson = new Gson();
        Type runnerType = new TypeToken<Map<String, RunnerEntry>>() {
        }.getType();
        String path = "src/test/resources/runnerList.json";
        String json = IOUtils.toString(new FileInputStream(new File(path)), StandardCharsets.UTF_8);
        return gson.fromJson(json, runnerType);
    }

    static DAG getSampleFlowJSON() throws IOException {
        String path = "src/test/resources/flowPlan.json";
        String json = IOUtils.toString(new FileInputStream(new File(path)), StandardCharsets.UTF_8);
        Gson gson = new Gson();
        return gson.fromJson(json, DAG.class);
    }
}
